import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.client.utils.URIBuilder;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.util.EntityUtils;
import org.json.JSONArray;
import org.json.JSONObject;


public class Main {

    // Replace <Subscription Key> with your valid subscription key.
    private static final String subscriptionKey = "b7a6bc888a0a409c93f3ab1144ebadcd";

    // NOTE: You must use the same region in your REST call as you used to
// obtain your subscription keys. For example, if you obtained your
// subscription keys from westus, replace "westcentralus" in the URL
// below with "westus".
//
// Free trial subscription keys are generated in the "westus" region. If you
// use a free trial subscription key, you shouldn't need to change this region.
    private static final String uriBase =
            "https://eastus.api.cognitive.microsoft.com/face/v1.0/detect";

    //working with my face from internet

    private static final String imageWithFaces =
            "{\"url\":\"https://i.imgur.com/TAsuuQY.jpg\"}";


//File file = new File("C:\Users\Account\Documents\ProjectFolder\ResourceFolder\image");
    //not working with my face from fath
//    File myFile=new File("C:\\Users\\Irfan\\Desktop\\testPics/irfHappy.jpg");
//    URL myUrl = myFile.toURI().toURL();
//
//
//
//URL nUrl = new File("C:\\Users\\Irfan\\Desktop\\Advanced data structures\\Emotion1\\irfHappy.JPG").toURI().toURL();
//
//
//    private static final String imageWithFaces =
//            "{\"url\":\"nUrl\"}";

    //all other attributes
//    private static final String faceAttributes =
//            "age,gender,headPose,smile,facialHair,glasses,emotion,hair,makeup,occlusion,accessories,blur,exposure,noise";

    //just emotion attribute
    private static final String faceAttributes =
            "emotion";

    public Main() throws MalformedURLException {
    }

    public static void main(String[] args) throws URISyntaxException, IOException {
        System.out.println("Hello, Facial App testing 1:");

        HttpClient httpclient = HttpClientBuilder.create().build();

        try {
            URIBuilder builder = new URIBuilder(uriBase);

            // Request parameters. All of them are optional.
            builder.setParameter("returnFaceId", "true");
            builder.setParameter("returnFaceLandmarks", "false");
            builder.setParameter("returnFaceAttributes", faceAttributes);
            
            // Prepare the URI for the REST API call.
            URI uri = builder.build();
            HttpPost request = new HttpPost(uri);

            // Request headers.
            request.setHeader("Content-Type", "application/json");
            request.setHeader("Ocp-Apim-Subscription-Key", subscriptionKey);

            // Request body.
            StringEntity reqEntity = new StringEntity(imageWithFaces);
            request.setEntity(reqEntity);

            // Execute the REST API call and get the response entity.
            HttpResponse response = httpclient.execute(request);
            HttpEntity entity = response.getEntity();


            if (entity != null)
            {
                // Format and display the JSON response.
                System.out.println("REST Response:\n");

                String jsonString = EntityUtils.toString(entity).trim();
                if (jsonString.charAt(0) == '[') {
                    JSONArray jsonArray = new JSONArray(jsonString);
                    System.out.println(jsonArray.toString(2));
                }
                else if (jsonString.charAt(0) == '{') {
                    JSONObject jsonObject = new JSONObject(jsonString);
                    System.out.println(jsonObject.toString(2));
                } else {
                    System.out.println(jsonString);
                }
            }
        }
        catch (Exception e)
        {
            // Display error message.
            System.out.println(e.getMessage());
        }
    }
}

